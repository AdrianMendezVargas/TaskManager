@page "/login"

@layout AuthLayout

@inject IToastService toast
@inject NavigationManager NavManager
@inject IAccountService accountService


<div class="card-header bg-transparent">
    <h1>@(!IsRegister ? "Log in" : "Sign Up")</h1>
</div>
<div class="card-body">
    @if (!IsRegister) {
        <EditForm id="inicio-sesion-form" Model="LoginCredenncial" OnValidSubmit="LogInUser">
            <div class="input-group mt-3">
                <div class="input-group-append">
                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                </div>
                <InputText type="email" class="form-control input_user" placeholder="Email" @bind-Value="LoginCredenncial.Email" />
            </div>
            <ValidationMessage For="()=> LoginCredenncial.Email" />
            <div class="input-group mt-3">
                <div class="input-group-append">
                    <span class="input-group-text"><i class="fas fa-key"></i></span>
                </div>
                <InputText type="password" class="form-control input_user" placeholder="Password" @bind-Value="LoginCredenncial.Password" />
            </div>
            <ValidationMessage For="()=> LoginCredenncial.Password" />
            <DataAnnotationsValidator />
        </EditForm>

    } else {
<EditForm id="registro-form" Model="RegisterRequest" OnValidSubmit="SignUp">
    <div class="input-group mt-3">
        <div class="input-group-append">
            <span class="input-group-text"><i class="fas fa-envelope"></i></span>
        </div>
        <InputText type="email" class="form-control input_user" placeholder="Email" @bind-Value="RegisterRequest.Email" />
    </div>
    <ValidationMessage For="()=> RegisterRequest.Email" />

    <div class="input-group mt-3">
        <div class="input-group-append">
            <span class="input-group-text"><i class="fas fa-key"></i></span>
        </div>
        <InputText type="password" class="form-control input_user" placeholder="Password" @bind-Value="RegisterRequest.Password" />
    </div>
    <ValidationMessage For="()=> RegisterRequest.Password" />
    <div class="input-group mt-3">
        <div class="input-group-append">
            <span class="input-group-text"><i class="fas fa-check-circle"></i></span>
        </div>
        <input type="password" class="form-control input_user" placeholder="Confirm password" @bind="ConfirmPassword">
    </div>
    <ConfirmPasswordValidator ConfirmPassword="@ConfirmPassword" />
    <DataAnnotationsValidator />
</EditForm>

    }
    <div class="text-center mt-3">
        <button type="@(!IsRegister ? "submit" : "button")" form="@(!IsRegister ? "inicio-sesion-form" : null)" class="btn@(!IsRegister ? " btn-info" : "")" @onclick="IniciarSesion_Click">Log in</button>
        <button type="@(IsRegister ? "submit" : "button")" form="@(IsRegister ? "registro-form" : null)" class="btn@(IsRegister ? " btn-info" : "")" @onclick="Registrarse_Click">Sign up</button>
    </div>
    <hr />
    <div class="text-center">
        Forgot the password? <a href="">Change password</a>
    </div>

</div>
@code {

    RegisterUserRequest RegisterRequest = new RegisterUserRequest();
    LoginRequest LoginCredenncial = new LoginRequest();

    bool IsRegister = false;
    string ConfirmPassword = "";

    async Task SignUp() {
        var operationResponse = await accountService.SignUpAsync(RegisterRequest);
        if (operationResponse.IsSuccess) {
            RegisterRequest = new RegisterUserRequest();
            toast.ShowSuccess(operationResponse.Message);
            IniciarSesion_Click();
        } else {
            toast.ShowError(operationResponse.Message);
        }
    }

    async Task LogInUser() {
        var operationResponse = await accountService.LoginAsync(LoginCredenncial);
        if (operationResponse.IsSuccess) {
            NavManager.NavigateTo("/");
        } else {
            toast.ShowError(operationResponse.Message);
        }
    }

    void Registrarse_Click() {
        if (!IsRegister) {
            RegisterRequest = new RegisterUserRequest();
            ConfirmPassword = string.Empty;
            IsRegister = true;
        }
    }

    void IniciarSesion_Click() {
        if (IsRegister) {
            IsRegister = false;
        }
    }

}
